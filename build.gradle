buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url "https://jitpack.io"
        }
    }
    dependencies {
        classpath "com.github.Skytils:ForgeGradle:6f5327"
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"

version = "1.0"
group = "bitcoin.generator"
archivesBaseName = "mod"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
}
dependencies {}

shadowJar {
    archiveFileName = jar.archiveFileName
}


reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}

task regularJar(type: Jar) {
    from (zipTree(shadowJar.archivePath)) {
        include "mod/**"
    }
    classifier = 'mod'
}

task pizzaJar(type: Jar) {
    from (zipTree(shadowJar.archivePath)) {
        include "qolskyblockmod/pizzaclient/commands/**"
    }
    classifier = 'pizza'
}

task exoticJar(type: Jar) {
    from (zipTree(shadowJar.archivePath)) {
        include "net/exotic/real/**"
    }
    classifier = 'exotic'
}

task oringoJar(type: Jar) {
    from (zipTree(shadowJar.archivePath)) {
        include "me/oringo/oringoclient/**"
    }
    classifier = 'oringo'
}

task rebJar(type: Jar) {
    from (zipTree(shadowJar.archivePath)) {
        include "rebzyyx/main/**"
    }
    classifier = 'rebzyyxJar'
}

task ssidJar(type: Jar) {
    from (zipTree(shadowJar.archivePath)) {
        include "rebzyyx/main/**"
    }
    classifier = 'rebzyyxJar'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

tasks.build.dependsOn(pizzaJar, oringoJar, exoticJar, regularJar, rebJar, ssidJar)